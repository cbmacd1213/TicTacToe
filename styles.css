*, *::after, *::before {
    box-sizing: border-box;
}
:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * .9);
}
/* The entire body of the page */
body {
    margin: 0;
}
/* the board where the grids will be stored, the game takes place here */
.board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
    

}
/* the cells or the board where the x's or o's will be stored  */
.cell {
    width: var(--cell-size);
    height: var(--cell-size); 
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}
/* the top 3 rows of the grid, the rules here will take the top of the 3x3 grid away  */
.cell:first-child,
 .cell:nth-child(2),
  .cell:nth-child(3) {
      border-top: none;
  }
/* left side of the grid with no border */
  .cell:nth-child(3n + 1){
    border-left: none;
  }
/* right side of the grid with no border*/
  .cell:nth-child(3n + 3) {
    border-right: none;
  }
/* the bottom 3 rows of the grid, the rules here will take the bottom of the 3x3 grid away  */
  .cell:last-child,
 .cell:nth-child(8),
  .cell:nth-child(7) {
      border-bottom: none;
  }
/* when there is a x or o in the cell the cursor will not be allowed  */
.cell.x,
.cell.circle {
    cursor: not-allowed;
}
.cell.x::before,
.cell.x::after,
.cell.circle::before {
    background-color: coral;
}

/*if the cell is not occupied let a lightly colored x or o show what cell you are in to show what the choice is*/
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
    background-color: lightcoral;
}

  .cell.x::before,
  .cell.x::after,
  .board.x .cell:not(.x):not(.circle):hover::before,
  .board.x .cell:not(.x):not(.circle):hover::after {
      content: '';
      width: calc(var(--mark-size) * .15);
      height: var(--mark-size);
      position: absolute;
  }
/* one of the lines to make the x that will populate a cell*/
  .cell.x::before,
  .board.x .cell:not(.x):not(.circle):hover::before{
      transform: rotate(45deg);
  }
/* one of the lines to make the x that will populate a cell*/
  .cell.x::after,
  .board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
}
/* the circle itself and how it would it displayed in the cells */
.cell.circle::before,
  .cell.circle::after,
  .board.circle .cell:not(.x):not(.circle):hover::before,
  .board.circle .cell:not(.x):not(.circle):hover::after  {
      content: '';
      position: absolute;
      border-radius: 50%;
    
  }

  .cell.circle::before,
  .board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
  }
  
  .cell.circle::after,
  .board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: white;
  }
/* how the winning message will be shown*/
  .winning-message {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, .7);
      justify-content: center;
      align-items: center;
      color: white;
      font-size: 5rem;
      flex-direction: column;
    }
    /* the winning message button*/
    .winning-message button {
        font-size: 3rem;
        background-color: white;
        border: 1px solid black;
        padding: .25em .5em;
        cursor: pointer;
    }
/* the winning message button when hovered over */
    .winning-message button:hover {
        background-color: black;
        color: white;
        border-color: white;
    }
    /* when the winning message is shown */
    .winning-message.show {
        display: flex;
    }